#!/usr/bin/perl

use strict;
use warnings;
use JSON;
use LWP::UserAgent;
use HTML::Entities;
use POSIX qw(strftime);

# GitHub Raw URI to the JSON file
my $github_uri = 'https://raw.githubusercontent.com/BoaThor/CVE-Resources/main/cve_resources_list_alpha_sorted.JSON';

# Create a user agent object
my $ua = LWP::UserAgent->new;
$ua->timeout(5);
$ua->env_proxy;

# Fetch the JSON content from the GitHub URI
my $response = $ua->get($github_uri);

# Check for HTTP errors
if ($response->is_success) {
    my $json_text = $response->decoded_content;
    
    # Parse JSON data
    my $data;
    eval {
        $data = decode_json($json_text);
    };
    if ($@) {
        die "Error parsing JSON data: $@";
    }

    # Verify that the parsed data is an array reference
    unless (ref($data) eq 'ARRAY') {
        die "Expected an array of objects, but the parsed data is not of type ARRAY.";
    }

    # Generate timestamp for the output file name
    my $timestamp = strftime("%d-%m-%Y", localtime);
    my $output_file = "cveresources_fetched_$timestamp.html";

    # Open the output file for writing
    open(my $fh, '>', $output_file) or die "Cannot open output file $output_file: $!";

    # Print HTML header
    print $fh <<"HTML";
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>List of CVE resources</title>
</head>
<body>
HTML

    # Process data and generate HTML content
    foreach my $item (@$data) {
        unless (ref($item) eq 'HASH') {
            warn "Expected a hash reference, but the element is not of type HASH.";
            next;
        }

        my $supplier = encode_entities($item->{supplier} // '');
        my $comment  = encode_entities($item->{comment} // '');
        my $location = encode_entities($item->{location} // '');

        print $fh qq{    <a href="$location">$supplier - $comment</a><br>\n};
    }

    # Print HTML footer
    print $fh <<"HTML";
</body>
</html>
HTML

    # Close the output file
    close($fh);

    print "HTML file generated: $output_file\n";
} else {
    die "HTTP GET error: ", $response->status_line;
}
